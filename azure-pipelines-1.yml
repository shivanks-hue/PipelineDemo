trigger:
- task: CmdLine@2
  inputs:
    script: |
      echo Write your commands here
      
      echo Hello world
  - main

pool:
  name: Default   # Your self-hosted Windows agent pool name

variables:
  MAVEN_OPTS: "-Xmx1024m"

steps:
# Step 0: Checkout repository
- checkout: self

# Step 1: Ensure Chocolatey is installed
- powershell: |
    if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
        Write-Host "Installing Chocolatey..."
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
    } else {
        Write-Host "Chocolatey already installed."
    }
  displayName: 'Ensure Chocolatey is Installed'

# Step 2: Install JDK 21
- powershell: |
    $jdkVersion = "21"
    $arch = "x64"
    $os = "windows"
    $impl = "hotspot"
    $releaseType = "ga"
    $downloadUrl = "https://api.adoptium.net/v3/binary/latest/$jdkVersion/$releaseType/$os/$arch/jdk/$impl/normal/eclipse"

    Invoke-WebRequest -Uri $downloadUrl -OutFile "jdk.zip"
    $jdkDir = "$(Agent.ToolsDirectory)\jdk-$jdkVersion"
    Expand-Archive -Path "jdk.zip" -DestinationPath $jdkDir -Force
    Remove-Item "jdk.zip"
    $jdkHome = Get-ChildItem $jdkDir | Where-Object { $_.PSIsContainer } | Select-Object -First 1
    $jdkHomePath = $jdkHome.FullName
    Write-Host "Setting JAVA_HOME to $jdkHomePath"
    $env:JAVA_HOME = $jdkHomePath
    $env:PATH = "$env:JAVA_HOME\bin;$env:PATH"
    & "$env:JAVA_HOME\bin\java.exe" -version
  displayName: 'Install JDK 21'

# Step 3: Cache Maven dependencies
- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    path: '$(USERPROFILE)\.m2\repository'
    restoreKeys: |
      maven | "$(Agent.OS)"

# Step 4: Install Chrome & ChromeDriver
- powershell: |
    # Detect Chrome
    $chromePath = "${Env:ProgramFiles}\Google\Chrome\Application\chrome.exe"
    if (-Not (Test-Path $chromePath)) { $chromePath = "${Env:ProgramFiles(x86)}\Google\Chrome\Application\chrome.exe" }
    if (-Not (Test-Path $chromePath)) { Write-Error "Google Chrome not found!"; exit 1 }
    
    # Get Chrome version
    try { $chromeVersion = (Get-ItemProperty "HKLM:\SOFTWARE\Google\Chrome\BLBeacon").version } catch {}
    if (-not $chromeVersion) {
        try { $chromeVersion = (Get-ItemProperty "HKLM:\SOFTWARE\WOW6432Node\Google\Chrome\BLBeacon").version } catch {}
    }
    if (-not $chromeVersion) { $chromeVersion = (& $chromePath --version).Split(' ')[2] }
    
    $chromeMajorVersion = $chromeVersion.Split('.')[0]
    $chromedriverVersion = Invoke-RestMethod -Uri "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$chromeMajorVersion"
    $chromedriverZip = "chromedriver_win32.zip"
    Invoke-WebRequest -Uri "https://chromedriver.storage.googleapis.com/$chromedriverVersion/chromedriver_win32.zip" -OutFile $chromedriverZip
    Expand-Archive -Path $chromedriverZip -DestinationPath "$(Agent.ToolsDirectory)\chromedriver" -Force
    Remove-Item $chromedriverZip
    $env:PATH += ";$(Agent.ToolsDirectory)\chromedriver"
    & "$(Agent.ToolsDirectory)\chromedriver\chromedriver.exe" --version
  displayName: 'Install Chrome & ChromeDriver'

# Step 5: LambdaTest Configuration Setup
- task: LambdaTestSetup@1
  inputs:
    authMode: 'Basic'
    username: '$(LT_USERNAME)'
    accessKey: '$(LT_ACCESS_KEY)'
    serviceConnection: 'LambdaTestConnection'
  displayName: 'LambdaTest Configuration Setup'

# Optional Step: Start LambdaTest Tunnel (for localhost testing)
- task: LambdaTestTunnel@1
  inputs:
    action: 'Start'
    serviceConnection: 'LambdaTestConnection'
  displayName: 'Start LambdaTest Tunnel'

# Step 6: Build Maven project
- script: mvn clean compile
  displayName: 'Maven Clean & Compile'

# Step 7: Run Selenium Tests (Java)
- script: mvn test
  displayName: 'Run Selenium Tests on LambdaTest'

# Step 8: Publish LambdaTest Results
- task: LambdaTestResults@1
  inputs:
    serviceConnection: 'LambdaTestConnection'
  displayName: 'Publish LambdaTest Results'

# Optional Step: Stop LambdaTest Tunnel
- task: LambdaTestTunnel@1
  inputs:
    action: 'Stop'
    serviceConnection: 'LambdaTestConnection'
  displayName: 'Stop LambdaTest Tunnel'

# Step 9: Package project (optional)
- script: mvn package
  displayName: 'Maven Package'
